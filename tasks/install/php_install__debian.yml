---
- name: ensure dependencies are installed.
  ansible.builtin.apt:
    name: "{{ php_install__dependencies_debian }}"
    state: present
    update_cache: true

- name: repo for debian
  block:
    - name: add php repository gpg key
      ansible.builtin.apt_key:
        url: "{{ php_install__sury_repo_gpg_key }}"
        state: present
      when: php_install__sury_repo

    - name: add php repository
      ansible.builtin.apt_repository:
        repo: "{{ php_install__sury_repo_path }}"
        state: present
        update_cache: yes
      when: php_install__sury_repo
  when: ansible_distribution == "Debian"

- name: repo for ubuntu
  block:
    - name: add php repository
      ansible.builtin.apt_repository:
        repo: "{{ php_install__ondrej_repo_name }}"
        state: present
        update_cache: yes
      when: php_install__ondrej_repo
  when: ansible_distribution == "Ubuntu"

- name: service facts
  ansible.builtin.service_facts:

- name: ensure php-fpm is stopped
  ansible.builtin.service:
    name: "php{{ php_install__version }}-fpm"
    state: stopped
  when: ansible_facts.services is search(php_install__version + '-fpm.service')

- name: ensure apache2 is stopped
  ansible.builtin.service:
    name: "apache2"
    state: stopped
  when: ansible_facts.services is search("apache2.service")

- name: install php{{ php_install__version }}
  ansible.builtin.apt:
    name: "php{{ php_install__version }}"
    state: present
  ignore_errors: yes  

- name: install php{{ php_install__version }} packages
  ansible.builtin.apt:
    name: "php{{ php_install__version }}-{{ item }}"
    state: present
  ignore_errors: yes
  with_items: "{{ php_install__list }}"

- name: ensure php{{ php_install__version }}-fpm is started
  ansible.builtin.service:
    name: "php{{ php_install__version }}-fpm"
    state: started
