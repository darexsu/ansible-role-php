---
- name: ensure dependencies are installed.
  ansible.builtin.apt:
    name: "{{ item }}"
    state: present
    update_cache: true
  with_items: "{{ php_const[ansible_os_family]['dependencies'] }}"

- name: add repository debian
  block:
    - name: add php repository gpg key
      ansible.builtin.apt_key:
        url: "{{ php_const[ansible_os_family][php.repo]['sury_gpg'] }}"
        state: present

    - name: add php repository Debian
      ansible.builtin.apt_repository:
        repo: "{{ php_const[ansible_os_family][php.repo]['sury_repo'] }}"
        state: present
      when: not ansible_distribution == "Ubuntu"

    - name: add php repository Ubuntu
      ansible.builtin.apt_repository:
        repo: "{{ php_const[ansible_os_family][php.repo]['andrej_repo'] }}"
        state: present
      when: ansible_distribution == "Ubuntu"
  when: php.repo == "third_party"

- name: service facts
  ansible.builtin.service_facts:

- name: ensure php-fpm is stopped
  ansible.builtin.service:
    name: "php{{ php.version }}-fpm"
    state: stopped
  when: ansible_facts.services is search(php_const[ansible_os_family][php.repo]['modules_name'])

- name: install php
  ansible.builtin.apt:
    name: "php{{ php.version }}"
    state: present
    update_cache: true
  ignore_errors: true

- name: install php modules
  ansible.builtin.apt:
    name: "php{{ php.version }}-{{ item }}"
    state: present
    update_cache: true
  ignore_errors: true
  with_items: "{{ php_install.modules }}"

- name: "ensure php-fpm is {{ php['service']['state'] }}"
  ansible.builtin.service:
    name: "php{{ php.version }}-fpm"
    state: "{{ php['service']['state'] }}"
    enabled: "{{ php['service']['enabled'] }}"
  ignore_errors: true
  when: ansible_facts.services is search(php_const[ansible_os_family][php.repo]['modules_name'])